{"ast":null,"code":"var _jsxFileName = \"/Users/heesoopark/Desktop/myprj/src/components/widgets/FormFields/formFields.js\";\nimport React from 'react';\nimport styles from './formFields.css';\n\nconst FormFields = ({\n  formdata,\n  change,\n  id\n}) => {\n  const showError = () => {\n    let errorMessage = null;\n\n    if (formdata.validation && !formdata.valid) {\n      errorMessage = /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.labelError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, formdata.validationMessage);\n    }\n\n    return errorMessage;\n  };\n\n  const renderTemplate = () => {\n    let formTemplate = null;\n\n    switch (formdata.element) {\n      case 'input':\n        formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formdata.config, {\n          value: formdata.value,\n          onBlur: event => change({\n            event,\n            id,\n            blur: true\n          }),\n          onChange: event => change({\n            event,\n            id,\n            blur: false\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        })), showError());\n        break;\n\n      case 'select':\n        formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"select\", {\n          value: formdata.value,\n          name: formdata.config.name,\n          onBlur: event => change({\n            event,\n            id,\n            blur: true\n          }),\n          onChange: event => change({\n            event,\n            id,\n            blur: false\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }\n        }, formdata.config.options.map((item, i) => /*#__PURE__*/React.createElement(\"option\", {\n          key: i,\n          value: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }\n        }, item.name))));\n        break;\n\n      default:\n        formTemplate = null;\n    }\n\n    return formTemplate;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, renderTemplate());\n};\n\nexport default FormFields;","map":{"version":3,"sources":["/Users/heesoopark/Desktop/myprj/src/components/widgets/FormFields/formFields.js"],"names":["React","styles","FormFields","formdata","change","id","showError","errorMessage","validation","valid","labelError","validationMessage","renderTemplate","formTemplate","element","config","value","event","blur","name","options","map","item","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,MAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAAyB;AAExC,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIC,YAAY,GAAG,IAAnB;;AAEA,QAAGJ,QAAQ,CAACK,UAAT,IAAuB,CAACL,QAAQ,CAACM,KAApC,EAA0C;AACtCF,MAAAA,YAAY,gBACR;AAAK,QAAA,SAAS,EAAEN,MAAM,CAACS,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,QAAQ,CAACQ,iBADd,CADJ;AAKH;;AAED,WAAOJ,YAAP;AACH,GAZD;;AAeA,QAAMK,cAAc,GAAG,MAAM;AACzB,QAAIC,YAAY,GAAG,IAAnB;;AAEA,YAAOV,QAAQ,CAACW,OAAhB;AACI,WAAK,OAAL;AACID,QAAAA,YAAY,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,+CACQV,QAAQ,CAACY,MADjB;AAEI,UAAA,KAAK,EAAEZ,QAAQ,CAACa,KAFpB;AAGI,UAAA,MAAM,EAAGC,KAAD,IAAWb,MAAM,CAAC;AAACa,YAAAA,KAAD;AAAOZ,YAAAA,EAAP;AAAUa,YAAAA,IAAI,EAAC;AAAf,WAAD,CAH7B;AAII,UAAA,QAAQ,EAAGD,KAAD,IAAWb,MAAM,CAAC;AAACa,YAAAA,KAAD;AAAOZ,YAAAA,EAAP;AAAUa,YAAAA,IAAI,EAAC;AAAf,WAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAOMZ,SAAS,EAPf,CADJ;AAWA;;AACJ,WAAK,QAAL;AACIO,QAAAA,YAAY,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AACI,UAAA,KAAK,EAAEV,QAAQ,CAACa,KADpB;AAEI,UAAA,IAAI,EAAEb,QAAQ,CAACY,MAAT,CAAgBI,IAF1B;AAGI,UAAA,MAAM,EAAGF,KAAD,IAAWb,MAAM,CAAC;AAACa,YAAAA,KAAD;AAAOZ,YAAAA,EAAP;AAAUa,YAAAA,IAAI,EAAC;AAAf,WAAD,CAH7B;AAII,UAAA,QAAQ,EAAGD,KAAD,IAAWb,MAAM,CAAC;AAACa,YAAAA,KAAD;AAAOZ,YAAAA,EAAP;AAAUa,YAAAA,IAAI,EAAC;AAAf,WAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMMf,QAAQ,CAACY,MAAT,CAAgBK,OAAhB,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAMC,CAAN,kBAC1B;AAAQ,UAAA,GAAG,EAAEA,CAAb;AAAgB,UAAA,KAAK,EAAED,IAAI,CAACjB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiCiB,IAAI,CAACH,IAAtC,CADF,CANN,CADJ,CADJ;AAeA;;AACJ;AACIN,QAAAA,YAAY,GAAG,IAAf;AAhCR;;AAkCA,WAAOA,YAAP;AACH,GAtCD;;AAwCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,cAAc,EADnB,CADJ;AAMH,CA/DD;;AAiEA,eAAeV,UAAf","sourcesContent":["import React from 'react';\nimport styles from './formFields.css';\n\n\nconst FormFields = ({formdata,change,id}) =>{\n\n    const showError = () => {\n        let errorMessage = null;\n\n        if(formdata.validation && !formdata.valid){\n            errorMessage = (\n                <div className={styles.labelError}>\n                    {formdata.validationMessage}\n                </div>\n            )\n        }\n\n        return errorMessage;\n    }\n\n\n    const renderTemplate = () => {\n        let formTemplate = null;\n\n        switch(formdata.element){\n            case('input'):\n                formTemplate = (\n                    <div>\n                        <input\n                            {...formdata.config}\n                            value={formdata.value}\n                            onBlur={(event) => change({event,id,blur:true})}\n                            onChange={(event) => change({event,id,blur:false})}\n                        />\n                        { showError() }\n                    </div>\n                )\n                break;\n            case('select'):\n                formTemplate = (\n                    <div>\n                        <select\n                            value={formdata.value}\n                            name={formdata.config.name}\n                            onBlur={(event) => change({event,id,blur:true})}\n                            onChange={(event) => change({event,id,blur:false})}\n                        >\n                            { formdata.config.options.map((item,i)=>(\n                                <option key={i} value={item.id}>{item.name}</option>\n                            ))}\n\n                        </select>\n                    </div>\n                )\n                break;\n            default:\n                formTemplate = null;\n        }\n        return formTemplate;\n    }\n\n    return(\n        <div>\n            {renderTemplate()}\n        </div>\n    )\n\n}\n\nexport default FormFields;"]},"metadata":{},"sourceType":"module"}