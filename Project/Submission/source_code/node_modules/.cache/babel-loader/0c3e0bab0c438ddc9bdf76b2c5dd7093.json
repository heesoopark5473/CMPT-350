{"ast":null,"code":"var _jsxFileName = \"/Users/heesoopark/Desktop/myprj/src/components/widgets/NewsList/newsList.js\";\nimport React, { Component } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactModal from 'react-modal';\nimport { NEWS_URL, NEWS_KEY } from '../../../config';\nimport style from './newsList.module.css';\nimport Button from '../Buttons/buttons';\nimport ListInfo from '../../widgets/ListInfo/listInfo';\nimport Header from './header';\n\nclass NewsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      country: this.props.country,\n      city: this.props.city,\n      category: this.props.category,\n      amount: this.props.amount,\n      showModal: false,\n      clickedItem: []\n    };\n\n    this.loadMore = () => {\n      this.state.amount = this.state.amount + 5;\n      this.request(this.request(this.state.country, this.state.city, this.state.category, this.state.amount));\n    };\n\n    this.request = (country, city, category, amount) => {\n      axios.get(`${NEWS_URL}country=${country}&category=${category}&pageSize=${amount}&q=${city}&apiKey=${NEWS_KEY}`).then(response => {\n        this.setState({\n          items: response.data.articles\n        });\n      });\n    };\n\n    this.renderNews = type => {\n      let template = null;\n\n      switch (type) {\n        case 'detail':\n          template = this.state.items.map((item, i) => /*#__PURE__*/React.createElement(CSSTransition, {\n            classNames: {\n              enter: style.newsList_wrapper,\n              enterActive: style.newsList_wrapper_enter\n            },\n            timeout: 500,\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: style.newslist_item,\n            onClick: () => this.handleOpenModal(item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(ListInfo, {\n            provider: item.source.name,\n            date: item.publishedAt,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }\n          }, item.title)))));\n          break;\n\n        case 'cardMain':\n          template = this.state.items.map((item, i) => /*#__PURE__*/React.createElement(CSSTransition, {\n            classNames: {\n              enter: style.newsList_wrapper,\n              enterActive: style.newsList_wrapper_enter\n            },\n            timeout: 500,\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: {\n              pathname: `articles/${i}`,\n              state: {\n                data: item\n              }\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: style.flex_wrapper,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: style.left,\n            style: {\n              background: `url(${item.urlToImage})`\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: style.right,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(ListInfo, {\n            provider: item.source.name,\n            date: item.publishedAt,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }\n          }, item.title))))));\n          break;\n\n        default:\n          template = null;\n      }\n\n      return template;\n    };\n  }\n\n  handleOpenModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  componentWillMount() {\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.request(this.state.country, this.state.city, this.state.category, this.state.amount);\n  }\n\n  handleOpenModal(item) {\n    this.setState({\n      clickedItem: item\n    });\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  render() {\n    console.log(this.state.clickedItem);\n    let header;\n\n    if (this.state.clickedItem.author == null) {\n      header = /*#__PURE__*/React.createElement(Header, {\n        date: this.state.clickedItem.publishedAt,\n        source: this.state.clickedItem.source,\n        author: \"N/A\",\n        title: this.state.clickedItem.title,\n        url: this.state.clickedItem.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 22\n        }\n      });\n    } else {\n      header = /*#__PURE__*/React.createElement(Header, {\n        date: this.state.clickedItem.publishedAt,\n        source: this.state.clickedItem.source,\n        author: this.state.clickedItemauthor,\n        title: this.state.clickedItem.title,\n        url: this.state.clickedItem.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactModal, {\n      isOpen: this.state.showModal,\n      contentLabel: \"Minimal Modal Example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleCloseModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \"Close Modal\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: style.articleWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, header, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.articleBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, this.state.clickedItem.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: style.articleImage,\n      style: {\n        background: `url(${this.state.clickedItem.urlToImage})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: style.articleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, this.state.clickedItem.content)))), /*#__PURE__*/React.createElement(TransitionGroup, {\n      component: \"div\",\n      className: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, this.renderNews(this.props.type)), /*#__PURE__*/React.createElement(Button, {\n      type: \"loadmore\",\n      loadMore: () => this.loadMore(),\n      cta: \"Load More News\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default NewsList;","map":{"version":3,"sources":["/Users/heesoopark/Desktop/myprj/src/components/widgets/NewsList/newsList.js"],"names":["React","Component","CSSTransition","TransitionGroup","Link","axios","ReactModal","NEWS_URL","NEWS_KEY","style","Button","ListInfo","Header","NewsList","state","items","country","props","city","category","amount","showModal","clickedItem","loadMore","request","get","then","response","setState","data","articles","renderNews","type","template","map","item","i","enter","newsList_wrapper","enterActive","newsList_wrapper_enter","newslist_item","handleOpenModal","source","name","publishedAt","title","pathname","flex_wrapper","left","background","urlToImage","right","handleCloseModal","componentWillMount","bind","render","console","log","header","author","url","clickedItemauthor","articleWrapper","articleBody","articleImage","articleText","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactModal from 'react-modal';\n\nimport { NEWS_URL, NEWS_KEY } from '../../../config';\nimport style from './newsList.module.css';\nimport Button from '../Buttons/buttons';\nimport ListInfo from '../../widgets/ListInfo/listInfo';\nimport Header from './header';\n\nclass NewsList extends Component {\n    \n    state = {\n        items:[],\n        country: this.props.country,\n        city: this.props.city,\n        category: this.props.category,\n        amount: this.props.amount,\n        showModal: false,\n        clickedItem: []\n    }\n\n    handleOpenModal() {\n        this.setState({showModal: true})\n    }\n    handleCloseModal() {\n        this.setState({showModal: false})\n    }\n\n    componentWillMount(){\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n        this.request(this.state.country, this.state.city, this.state.category, this.state.amount)\n    }\n\n    loadMore =() => {\n        this.state.amount = this.state.amount + 5;\n        this.request(this.request(this.state.country, this.state.city, this.state.category, this.state.amount))\n    }\n\n    request = (country, city, category, amount ) => {\n        axios.get(`${NEWS_URL}country=${country}&category=${category}&pageSize=${amount}&q=${city}&apiKey=${NEWS_KEY}`)\n        .then( response => {\n            this.setState({\n                items:response.data.articles\n            })\n        })\n    }\n\n    handleOpenModal(item) {\n        this.setState({clickedItem: item})\n        this.setState({showModal: true})\n    }\n    handleCloseModal() {\n        this.setState({showModal: false})\n    }\n\n    renderNews = (type) => {\n        let template = null;\n        switch(type){\n            case('detail'):\n                template = this.state.items.map( (item, i) => (\n                    <CSSTransition\n                        classNames={{\n                            enter:style.newsList_wrapper,\n                            enterActive:style.newsList_wrapper_enter\n                        }}\n                        timeout={500}\n                        key={i}\n                    >\n                        <div>\n                            <div className={style.newslist_item} onClick={()=> this.handleOpenModal(item)}>\n                                {/* <Link to={{\n                                    pathname: `articles/${i}`,\n                                    state: {\n                                        data: item\n                                    }\n                                }}> */}\n                                {/* <a href={item.url}> */}\n                                    <ListInfo provider={item.source.name} date={item.publishedAt}/>\n                                    <h2>{item.title}</h2>\n                                {/* </a> */}\n                                {/* </Link> */}\n                            </div>\n                        </div>\n                    </CSSTransition>\n                ))\n                break;\n            case('cardMain'):\n                template = this.state.items.map( (item, i) => (\n                    <CSSTransition\n                        classNames={{\n                            enter:style.newsList_wrapper,\n                            enterActive:style.newsList_wrapper_enter\n                        }}\n                        timeout={500}\n                        key={i}\n                    >\n                        <Link to={{\n                            pathname:`articles/${i}`,\n                            state: {\n                                data:item\n                            }\n                        }}>\n                            <div className={style.flex_wrapper}>\n                                <div className={style.left}\n                                    style={{\n                                        background: `url(${item.urlToImage})`\n                                    }}>\n                                    <div></div>\n                                </div>\n                                <div className={style.right}>\n                                    <ListInfo provider={item.source.name} date={item.publishedAt}/>\n                                    <h2>{item.title}</h2>\n                                </div>\n                            </div>\n                        </Link>\n                    </CSSTransition>\n                ))\n                break;\n            default:\n                template=null;\n        }\n        return template;\n    }\n\n    render() {\n        console.log(this.state.clickedItem)\n        let header;\n        if(this.state.clickedItem.author == null){\n            header = <Header \n            date={this.state.clickedItem.publishedAt}\n            source={this.state.clickedItem.source}\n            author='N/A'\n            title={this.state.clickedItem.title}\n            url={this.state.clickedItem.url}\n            />\n        }else{\n            header = <Header \n            date={this.state.clickedItem.publishedAt}\n            source={this.state.clickedItem.source}\n            author={this.state.clickedItemauthor}\n            title={this.state.clickedItem.title}\n            url={this.state.clickedItem.url}\n            />\n        }\n        return(\n            <div>\n                <ReactModal\n                    isOpen={this.state.showModal}\n                    contentLabel=\"Minimal Modal Example\"\n                >\n                    <button onClick={this.handleCloseModal}>Close Modal</button>\n                    <div className={style.articleWrapper}>\n                        {header}\n                        <div className={style.articleBody}>\n                            <h1>{this.state.clickedItem.title}</h1>\n                            <div className={style.articleImage}\n                                style={{\n                                    background: `url(${this.state.clickedItem.urlToImage})`\n                                }}\n                            ></div>\n                            <div className={style.articleText}>\n                                {this.state.clickedItem.content}\n                            </div>\n                        </div>\n                    </div>\n                </ReactModal>\n\n                <TransitionGroup\n                    component=\"div\"\n                    className=\"list\"\n                >\n                    { this.renderNews( this.props.type )}\n                </TransitionGroup>\n                <Button\n                    type=\"loadmore\"\n                    loadMore={()=>this.loadMore()}\n                    cta=\"Load More News\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default NewsList;"]},"metadata":{},"sourceType":"module"}