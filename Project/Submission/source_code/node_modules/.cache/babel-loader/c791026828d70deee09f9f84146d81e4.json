{"ast":null,"code":"var _jsxFileName = \"/Users/heesoopark/Desktop/github_repo/uSask/CMPT350/Project/Submission/source_code/src/components/Signin/signin.js\";\nimport React, { Component } from 'react';\nimport styles from './signin.module.css';\nimport { firebase } from '../../firebase';\nimport FormField from '../widgets/FormFields/formFields';\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      registerError: '',\n      loading: false,\n      formdata: {\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'email_input',\n            type: 'email',\n            placeholder: 'Enter your email'\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: ''\n        },\n        password: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Enter your password'\n          },\n          validation: {\n            required: true,\n            password: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: ''\n        }\n      }\n    };\n\n    this.updateForm = element => {\n      const newFormdata = { ...this.state.formdata\n      };\n      const newElement = { ...newFormdata[element.id]\n      };\n      newElement.value = element.event.target.value;\n\n      if (element.blur) {\n        let validData = this.validate(newElement);\n        newElement.valid = validData[0];\n        newElement.validationMessage = validData[1];\n      }\n\n      newElement.touched = element.blur;\n      newFormdata[element.id] = newElement;\n      this.setState({\n        formdata: newFormdata\n      });\n    };\n\n    this.validate = element => {\n      let error = [true, ''];\n\n      if (element.validation.email) {\n        const valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n        const message = `${!valid ? 'Must be a valid email' : ''}`;\n        error = !valid ? [valid, message] : error;\n      }\n\n      if (element.validation.password) {\n        const valid = element.value.length >= 5;\n        const message = `${!valid ? 'Must be greater than 5' : ''}`;\n        error = !valid ? [valid, message] : error;\n      }\n\n      if (element.validation.required) {\n        const valid = element.value.trim() !== '';\n        const message = `${!valid ? 'This field is required' : ''}`;\n        error = !valid ? [valid, message] : error;\n      }\n\n      return error;\n    };\n\n    this.submitForm = (event, type) => {\n      event.preventDefault();\n\n      if (type !== null) {\n        let dataToSubmit = {};\n        let formIsValid = true;\n\n        for (let key in this.state.formdata) {\n          dataToSubmit[key] = this.state.formdata[key].value;\n        }\n\n        for (let key in this.state.formdata) {\n          formIsValid = this.state.formdata[key].valid && formIsValid;\n        }\n\n        if (formIsValid) {\n          this.setState({\n            loading: true,\n            registerError: ''\n          });\n\n          if (type) {\n            firebase.auth().signInWithEmailAndPassword(dataToSubmit.email, dataToSubmit.password).then(() => {\n              this.props.history.push('/');\n            }).catch(error => {\n              this.setState({\n                loading: false,\n                registerError: error.message\n              });\n            });\n          } else {\n            firebase.auth().createUserWithEmailAndPassword(dataToSubmit.email, dataToSubmit.password).then(() => {\n              this.props.history.push('/');\n            }).catch(error => {\n              this.setState({\n                loading: false,\n                registerError: error.message\n              });\n            });\n          }\n        }\n      }\n    };\n\n    this.submitButton = () => this.state.loading ? 'loading...' : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: event => this.submitForm(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \" Register now\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: event => this.submitForm(event, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \" Log in \"));\n\n    this.showError = () => this.state.registerError !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, this.state.registerError) : '';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.logContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.submitForm(event, null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Register / Log in\"), /*#__PURE__*/React.createElement(FormField, {\n      id: 'email',\n      formdata: this.state.formdata.email,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'password',\n      formdata: this.state.formdata.password,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }), this.submitButton(), this.showError()));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/heesoopark/Desktop/github_repo/uSask/CMPT350/Project/Submission/source_code/src/components/Signin/signin.js"],"names":["React","Component","styles","firebase","FormField","SignIn","state","registerError","loading","formdata","email","element","value","config","name","type","placeholder","validation","required","valid","touched","validationMessage","password","updateForm","newFormdata","newElement","id","event","target","blur","validData","validate","setState","error","test","message","length","trim","submitForm","preventDefault","dataToSubmit","formIsValid","key","auth","signInWithEmailAndPassword","then","props","history","push","catch","createUserWithEmailAndPassword","submitButton","showError","render","logContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,SAAP,MAAsB,kCAAtB;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE3BK,KAF2B,GAEnB;AACJC,MAAAA,aAAa,EAAC,EADV;AAEJC,MAAAA,OAAO,EAAC,KAFJ;AAGJC,MAAAA,QAAQ,EAAC;AACLC,QAAAA,KAAK,EAAC;AACFC,UAAAA,OAAO,EAAC,OADN;AAEFC,UAAAA,KAAK,EAAC,EAFJ;AAGFC,UAAAA,MAAM,EAAC;AACHC,YAAAA,IAAI,EAAC,aADF;AAEHC,YAAAA,IAAI,EAAC,OAFF;AAGHC,YAAAA,WAAW,EAAC;AAHT,WAHL;AAQFC,UAAAA,UAAU,EAAC;AACPC,YAAAA,QAAQ,EAAC,IADF;AAEPR,YAAAA,KAAK,EAAC;AAFC,WART;AAYFS,UAAAA,KAAK,EAAC,KAZJ;AAaFC,UAAAA,OAAO,EAAC,KAbN;AAcFC,UAAAA,iBAAiB,EAAC;AAdhB,SADD;AAiBLC,QAAAA,QAAQ,EAAC;AACLX,UAAAA,OAAO,EAAC,OADH;AAELC,UAAAA,KAAK,EAAC,EAFD;AAGLC,UAAAA,MAAM,EAAC;AACHC,YAAAA,IAAI,EAAC,gBADF;AAEHC,YAAAA,IAAI,EAAC,UAFF;AAGHC,YAAAA,WAAW,EAAC;AAHT,WAHF;AAQLC,UAAAA,UAAU,EAAC;AACPC,YAAAA,QAAQ,EAAC,IADF;AAEPI,YAAAA,QAAQ,EAAC;AAFF,WARN;AAYLH,UAAAA,KAAK,EAAC,KAZD;AAaLC,UAAAA,OAAO,EAAC,KAbH;AAcLC,UAAAA,iBAAiB,EAAC;AAdb;AAjBJ;AAHL,KAFmB;;AAAA,SAyC3BE,UAzC2B,GAyCbZ,OAAD,IAAa;AACtB,YAAMa,WAAW,GAAG,EAChB,GAAG,KAAKlB,KAAL,CAAWG;AADE,OAApB;AAGA,YAAMgB,UAAU,GAAG,EACf,GAAGD,WAAW,CAACb,OAAO,CAACe,EAAT;AADC,OAAnB;AAGAD,MAAAA,UAAU,CAACb,KAAX,GAAmBD,OAAO,CAACgB,KAAR,CAAcC,MAAd,CAAqBhB,KAAxC;;AACA,UAAGD,OAAO,CAACkB,IAAX,EAAgB;AACZ,YAAIC,SAAS,GAAG,KAAKC,QAAL,CAAcN,UAAd,CAAhB;AACAA,QAAAA,UAAU,CAACN,KAAX,GAAmBW,SAAS,CAAC,CAAD,CAA5B;AACAL,QAAAA,UAAU,CAACJ,iBAAX,GAA+BS,SAAS,CAAC,CAAD,CAAxC;AACH;;AACDL,MAAAA,UAAU,CAACL,OAAX,GAAqBT,OAAO,CAACkB,IAA7B;AACAL,MAAAA,WAAW,CAACb,OAAO,CAACe,EAAT,CAAX,GAA0BD,UAA1B;AAEA,WAAKO,QAAL,CAAc;AACVvB,QAAAA,QAAQ,EAACe;AADC,OAAd;AAGH,KA5D0B;;AAAA,SA8D3BO,QA9D2B,GA8DfpB,OAAD,IAAa;AACpB,UAAIsB,KAAK,GAAG,CAAC,IAAD,EAAM,EAAN,CAAZ;;AAEA,UAAGtB,OAAO,CAACM,UAAR,CAAmBP,KAAtB,EAA4B;AACxB,cAAMS,KAAK,GAAG,eAAee,IAAf,CAAoBvB,OAAO,CAACC,KAA5B,CAAd;AACA,cAAMuB,OAAO,GAAI,GAAE,CAAChB,KAAD,GAAS,uBAAT,GAAiC,EAAG,EAAvD;AACAc,QAAAA,KAAK,GAAG,CAACd,KAAD,GAAS,CAACA,KAAD,EAAOgB,OAAP,CAAT,GAA2BF,KAAnC;AACH;;AAED,UAAGtB,OAAO,CAACM,UAAR,CAAmBK,QAAtB,EAA+B;AAC3B,cAAMH,KAAK,GAAGR,OAAO,CAACC,KAAR,CAAcwB,MAAd,IAAwB,CAAtC;AACA,cAAMD,OAAO,GAAI,GAAE,CAAChB,KAAD,GAAS,wBAAT,GAAkC,EAAG,EAAxD;AACAc,QAAAA,KAAK,GAAG,CAACd,KAAD,GAAS,CAACA,KAAD,EAAOgB,OAAP,CAAT,GAA2BF,KAAnC;AACH;;AAED,UAAGtB,OAAO,CAACM,UAAR,CAAmBC,QAAtB,EAA+B;AAC3B,cAAMC,KAAK,GAAGR,OAAO,CAACC,KAAR,CAAcyB,IAAd,OAAwB,EAAtC;AACA,cAAMF,OAAO,GAAI,GAAE,CAAChB,KAAD,GAAS,wBAAT,GAAkC,EAAG,EAAxD;AACAc,QAAAA,KAAK,GAAG,CAACd,KAAD,GAAS,CAACA,KAAD,EAAOgB,OAAP,CAAT,GAA2BF,KAAnC;AACH;;AAED,aAAOA,KAAP;AACH,KApF0B;;AAAA,SAsF3BK,UAtF2B,GAsFd,CAACX,KAAD,EAAOZ,IAAP,KAAgB;AACzBY,MAAAA,KAAK,CAACY,cAAN;;AAEA,UAAGxB,IAAI,KAAK,IAAZ,EAAiB;AAEb,YAAIyB,YAAY,GAAG,EAAnB;AACA,YAAIC,WAAW,GAAG,IAAlB;;AAEA,aAAI,IAAIC,GAAR,IAAe,KAAKpC,KAAL,CAAWG,QAA1B,EAAmC;AAC/B+B,UAAAA,YAAY,CAACE,GAAD,CAAZ,GAAoB,KAAKpC,KAAL,CAAWG,QAAX,CAAoBiC,GAApB,EAAyB9B,KAA7C;AACH;;AACD,aAAI,IAAI8B,GAAR,IAAe,KAAKpC,KAAL,CAAWG,QAA1B,EAAmC;AAC/BgC,UAAAA,WAAW,GAAG,KAAKnC,KAAL,CAAWG,QAAX,CAAoBiC,GAApB,EAAyBvB,KAAzB,IAAkCsB,WAAhD;AACH;;AAED,YAAGA,WAAH,EAAe;AACX,eAAKT,QAAL,CAAc;AACVxB,YAAAA,OAAO,EAAC,IADE;AAEVD,YAAAA,aAAa,EAAC;AAFJ,WAAd;;AAIA,cAAGQ,IAAH,EAAQ;AACJZ,YAAAA,QAAQ,CAACwC,IAAT,GACCC,0BADD,CAEIJ,YAAY,CAAC9B,KAFjB,EAGI8B,YAAY,CAAClB,QAHjB,EAIEuB,IAJF,CAIO,MAAI;AACP,mBAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,aAND,EAMGC,KANH,CAMUhB,KAAK,IAAG;AACd,mBAAKD,QAAL,CAAc;AACVxB,gBAAAA,OAAO,EAAC,KADE;AAEVD,gBAAAA,aAAa,EAAE0B,KAAK,CAACE;AAFX,eAAd;AAIH,aAXD;AAaH,WAdD,MAcO;AACHhC,YAAAA,QAAQ,CAACwC,IAAT,GACCO,8BADD,CAEIV,YAAY,CAAC9B,KAFjB,EAGI8B,YAAY,CAAClB,QAHjB,EAIEuB,IAJF,CAIO,MAAI;AACP,mBAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,aAND,EAMGC,KANH,CAMUhB,KAAK,IAAG;AACd,mBAAKD,QAAL,CAAc;AACVxB,gBAAAA,OAAO,EAAC,KADE;AAEVD,gBAAAA,aAAa,EAAE0B,KAAK,CAACE;AAFX,eAAd;AAIH,aAXD;AAYH;AACJ;AACJ;AAGJ,KA1I0B;;AAAA,SA6I3BgB,YA7I2B,GA6IZ,MACX,KAAK7C,KAAL,CAAWE,OAAX,GACI,YADJ,gBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAGmB,KAAD,IAAS,KAAKW,UAAL,CAAgBX,KAAhB,EAAsB,KAAtB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAQ,MAAA,OAAO,EAAGA,KAAD,IAAS,KAAKW,UAAL,CAAgBX,KAAhB,EAAsB,IAAtB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAjJuB;;AAAA,SAuJ3ByB,SAvJ2B,GAuJf,MACR,KAAK9C,KAAL,CAAWC,aAAX,KAA6B,EAA7B,gBACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAAC+B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAK3B,KAAL,CAAWC,aAA1C,CADJ,GAEE,EA1JqB;AAAA;;AA6J3B8C,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAEnD,MAAM,CAACoD,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAG3B,KAAD,IAAS,KAAKW,UAAL,CAAgBX,KAAhB,EAAsB,IAAtB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAGI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAE,OADR;AAEI,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWG,QAAX,CAAoBC,KAFlC;AAGI,MAAA,MAAM,EAAGC,OAAD,IAAW,KAAKY,UAAL,CAAgBZ,OAAhB,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAQI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAE,UADR;AAEI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWG,QAAX,CAAoBa,QAFlC;AAGI,MAAA,MAAM,EAAGX,OAAD,IAAW,KAAKY,UAAL,CAAgBZ,OAAhB,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAcM,KAAKwC,YAAL,EAdN,EAeM,KAAKC,SAAL,EAfN,CADJ,CADJ;AAqBH;;AAnL0B;;AAuL/B,eAAe/C,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport styles from './signin.module.css';\nimport { firebase } from '../../firebase';\n\nimport FormField from '../widgets/FormFields/formFields';\n\nclass SignIn extends Component {\n\n    state = {\n        registerError:'',\n        loading:false,\n        formdata:{\n            email:{\n                element:'input',\n                value:'',\n                config:{\n                    name:'email_input',\n                    type:'email',\n                    placeholder:'Enter your email'\n                },\n                validation:{\n                    required:true,\n                    email:true\n                },\n                valid:false,\n                touched:false,\n                validationMessage:''\n            },\n            password:{\n                element:'input',\n                value:'',\n                config:{\n                    name:'password_input',\n                    type:'password',\n                    placeholder:'Enter your password'\n                },\n                validation:{\n                    required:true,\n                    password:true\n                },\n                valid:false,\n                touched:false,\n                validationMessage:''\n            }\n        }\n    }\n\n    updateForm = (element) => {\n        const newFormdata = {\n            ...this.state.formdata\n        }\n        const newElement = {\n            ...newFormdata[element.id]\n        }\n        newElement.value = element.event.target.value;\n        if(element.blur){\n            let validData = this.validate(newElement);\n            newElement.valid = validData[0];\n            newElement.validationMessage = validData[1];   \n        }\n        newElement.touched = element.blur;\n        newFormdata[element.id] = newElement;\n        \n        this.setState({\n            formdata:newFormdata\n        })\n    }\n\n    validate = (element) => {\n        let error = [true,''];\n\n        if(element.validation.email){\n            const valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n            const message = `${!valid ? 'Must be a valid email':''}`;\n            error = !valid ? [valid,message] : error\n        }\n\n        if(element.validation.password){\n            const valid = element.value.length >= 5;\n            const message = `${!valid ? 'Must be greater than 5':''}`;\n            error = !valid ? [valid,message] : error\n        }\n\n        if(element.validation.required){\n            const valid = element.value.trim() !=='';\n            const message = `${!valid ? 'This field is required':''}`;\n            error = !valid ? [valid,message] : error\n        }\n\n        return error;\n    }\n\n    submitForm = (event,type) => {\n        event.preventDefault();\n\n        if(type !== null){\n\n            let dataToSubmit = {};\n            let formIsValid = true;\n\n            for(let key in this.state.formdata){\n                dataToSubmit[key] = this.state.formdata[key].value\n            }\n            for(let key in this.state.formdata){\n                formIsValid = this.state.formdata[key].valid && formIsValid;\n            }\n\n            if(formIsValid){\n                this.setState({\n                    loading:true,\n                    registerError:''\n                })\n                if(type){\n                    firebase.auth()\n                    .signInWithEmailAndPassword(\n                        dataToSubmit.email,\n                        dataToSubmit.password\n                    ).then(()=>{\n                        this.props.history.push('/')\n                    }).catch( error =>{\n                        this.setState({\n                            loading:false,\n                            registerError: error.message\n                        })\n                    })\n\n                } else {\n                    firebase.auth()\n                    .createUserWithEmailAndPassword(\n                        dataToSubmit.email,\n                        dataToSubmit.password\n                    ).then(()=>{\n                        this.props.history.push('/')\n                    }).catch( error =>{\n                        this.setState({\n                            loading:false,\n                            registerError: error.message\n                        })\n                    })\n                }\n            }\n        }\n\n\n    }\n\n\n    submitButton = () => (\n        this.state.loading ? \n            'loading...'\n        :\n        <div>\n            <button onClick={(event)=>this.submitForm(event,false)}> Register now</button>\n            <button onClick={(event)=>this.submitForm(event,true)}> Log in </button>\n        </div>\n    )\n\n    showError = () => (\n        this.state.registerError !== '' ? \n            <div className={styles.error}>{this.state.registerError}</div>\n        : ''\n    )\n\n    render(){\n        return(\n            <div className={styles.logContainer}>\n                <form onSubmit={(event)=>this.submitForm(event,null)}>\n                    <h2>Register / Log in</h2>\n\n                    <FormField\n                        id={'email'}\n                        formdata={this.state.formdata.email}\n                        change={(element)=>this.updateForm(element)}\n                    />\n                    <FormField\n                        id={'password'}\n                        formdata={this.state.formdata.password}\n                        change={(element)=>this.updateForm(element)}\n                    />\n\n                    { this.submitButton() }\n                    { this.showError() }\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}