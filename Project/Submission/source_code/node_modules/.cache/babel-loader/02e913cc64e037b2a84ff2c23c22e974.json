{"ast":null,"code":"var _jsxFileName = \"/Users/heesoopark/Desktop/myprj/src/components/Dashboard/dashboard.js\";\nimport React, { Component } from 'react';\nimport FormField from '../widgets/FormFields/formFields';\nimport styles from './dashboard.module.css';\nimport { firebaseTeams, firebaseArticles, firebase } from '../../firebase';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { stateToHTML } from 'draft-js-export-html';\nimport Uploader from '../widgets/FileUploader/fileUploader';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      postError: '',\n      loading: false,\n      formdata: {\n        author: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'author_input',\n            type: 'text',\n            placeholder: 'Enter your name'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: ''\n        },\n        title: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'title_input',\n            type: 'text',\n            placeholder: 'Enter the title'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: ''\n        },\n        body: {\n          element: 'texteditor',\n          value: '',\n          valid: true\n        },\n        image: {\n          element: 'image',\n          value: '',\n          valid: true\n        },\n        team: {\n          element: 'select',\n          value: '',\n          config: {\n            name: 'teams_input',\n            options: []\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false,\n          validationMessage: ''\n        }\n      }\n    };\n\n    this.loadTeams = () => {\n      firebaseTeams.once('value').then(snapshot => {\n        let team = [];\n        snapshot.forEach(childSnapshot => {\n          team.push({\n            id: childSnapshot.val().teamId,\n            name: childSnapshot.val().city\n          });\n        });\n        const newFormdata = { ...this.state.formdata\n        };\n        const newElement = { ...newFormdata['team']\n        };\n        newElement.config.options = team;\n        newFormdata['team'] = newElement;\n        this.setState({\n          formdata: newFormdata\n        });\n      });\n    };\n\n    this.updateForm = (element, content = '') => {\n      const newFormdata = { ...this.state.formdata\n      };\n      const newElement = { ...newFormdata[element.id]\n      };\n\n      if (content === '') {\n        newElement.value = element.event.target.value;\n      } else {\n        newElement.value = content;\n      }\n\n      if (element.blur) {\n        let validData = this.validate(newElement);\n        newElement.valid = validData[0];\n        newElement.validationMessage = validData[1];\n      }\n\n      newElement.touched = element.blur;\n      newFormdata[element.id] = newElement;\n      this.setState({\n        formdata: newFormdata\n      });\n    };\n\n    this.validate = element => {\n      let error = [true, ''];\n\n      if (element.validation.required) {\n        const valid = element.value.trim() !== '';\n        const message = `${!valid ? 'This field is required' : ''}`;\n        error = !valid ? [valid, message] : error;\n      }\n\n      return error;\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = {};\n      let formIsValid = true;\n\n      for (let key in this.state.formdata) {\n        dataToSubmit[key] = this.state.formdata[key].value;\n      }\n\n      for (let key in this.state.formdata) {\n        formIsValid = this.state.formdata[key].valid && formIsValid;\n      }\n\n      console.log(dataToSubmit);\n\n      if (formIsValid) {\n        this.setState({\n          loading: true,\n          postError: ''\n        });\n        firebaseArticles.orderByChild(\"id\").limitToLast(1).once('value').then(snapshot => {\n          let articleId = null;\n          snapshot.forEach(childSnapshot => {\n            articleId = childSnapshot.val().id;\n          });\n          dataToSubmit['date'] = firebase.database.ServerValue.TIMESTAMP;\n          dataToSubmit['id'] = articleId + 1;\n          dataToSubmit['team'] = parseInt(dataToSubmit['team'], 10);\n          firebaseArticles.push(dataToSubmit).then(article => {\n            this.props.history.push(`/articles/${article.key}`);\n          }).catch(e => {\n            this.setState({\n              postError: e.message\n            });\n          });\n        });\n      } else {\n        this.setState({\n          postError: 'Something went wrong'\n        });\n      }\n    };\n\n    this.submitButton = () => this.state.loading ? 'loading...' : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, \" Add Post \"));\n\n    this.showError = () => this.state.postError !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, this.state.postError) : '';\n\n    this.onEditorStateChange = editorState => {\n      let contentState = editorState.getCurrentContent();\n      let rawState = convertToRaw(contentState);\n      let html = stateToHTML(contentState);\n      this.updateForm({\n        id: 'body'\n      }, html);\n      this.setState({\n        editorState\n      });\n    };\n\n    this.storeFilename = filename => {\n      this.updateForm({\n        id: 'image'\n      }, filename);\n    };\n  }\n\n  componentDidMount() {\n    this.loadTeams();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.postContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, \"Add Post\"), /*#__PURE__*/React.createElement(Uploader, {\n      filename: filename => this.storeFilename(filename),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'author',\n      formdata: this.state.formdata.author,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'title',\n      formdata: this.state.formdata.title,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Editor, {\n      editorState: this.state.editorState,\n      wrapperClassName: \"myEditor-wrapper\",\n      editorClassName: \"myEditor-editor\",\n      onEditorStateChange: this.onEditorStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: 'team',\n      formdata: this.state.formdata.team,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }), this.submitButton(), this.showError()));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/heesoopark/Desktop/myprj/src/components/Dashboard/dashboard.js"],"names":["React","Component","FormField","styles","firebaseTeams","firebaseArticles","firebase","Editor","EditorState","convertFromRaw","convertToRaw","stateToHTML","Uploader","Dashboard","state","editorState","createEmpty","postError","loading","formdata","author","element","value","config","name","type","placeholder","validation","required","valid","touched","validationMessage","title","body","image","team","options","loadTeams","once","then","snapshot","forEach","childSnapshot","push","id","val","teamId","city","newFormdata","newElement","setState","updateForm","content","event","target","blur","validData","validate","error","trim","message","submitForm","preventDefault","dataToSubmit","formIsValid","key","console","log","orderByChild","limitToLast","articleId","database","ServerValue","TIMESTAMP","parseInt","article","props","history","catch","e","submitButton","showError","onEditorStateChange","contentState","getCurrentContent","rawState","html","storeFilename","filename","componentDidMount","render","postContainer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FormField from '../widgets/FormFields/formFields';\nimport styles from './dashboard.module.css';\nimport { firebaseTeams, firebaseArticles, firebase } from '../../firebase';\n\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { stateToHTML } from 'draft-js-export-html';\n\nimport Uploader from '../widgets/FileUploader/fileUploader';\n\nclass Dashboard extends Component {\n\n    state = {\n        editorState: EditorState.createEmpty(),\n        postError:'',\n        loading:false,\n        formdata:{\n            author:{\n                element:'input',\n                value:'',\n                config:{\n                    name:'author_input',\n                    type:'text',\n                    placeholder:'Enter your name'\n                },\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false,\n                validationMessage:''\n            },\n            title:{\n                element:'input',\n                value:'',\n                config:{\n                    name:'title_input',\n                    type:'text',\n                    placeholder:'Enter the title'\n                },\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false,\n                validationMessage:''\n            },\n            body:{\n                element:'texteditor',\n                value:'',\n                valid:true\n            },\n            image:{\n                element:'image',\n                value:'',\n                valid:true\n            },\n            team:{\n                element:'select',\n                value:'',\n                config:{\n                    name:'teams_input',\n                    options:[]\n                },\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false,\n                validationMessage:''\n            }\n        }\n    }\n\n    componentDidMount(){\n        this.loadTeams()\n    }\n\n    loadTeams = () => {\n        firebaseTeams.once('value')\n        .then((snapshot)=>{\n            let team = [];\n\n            snapshot.forEach((childSnapshot)=>{\n                team.push({\n                    id: childSnapshot.val().teamId,\n                    name: childSnapshot.val().city\n                })\n            })\n\n            const newFormdata = {...this.state.formdata};\n            const newElement = {...newFormdata['team'] };\n\n            newElement.config.options = team;\n            newFormdata['team'] = newElement;\n\n            this.setState({\n                formdata: newFormdata\n            })\n        })\n\n    }\n\n\n    updateForm = (element,content = '') => {\n        const newFormdata = {\n            ...this.state.formdata\n        }\n        const newElement = {\n            ...newFormdata[element.id]\n        }\n\n        if(content === ''){\n            newElement.value = element.event.target.value;\n        } else {\n            newElement.value = content\n        }\n        \n        if(element.blur){\n            let validData = this.validate(newElement);\n            newElement.valid = validData[0];\n            newElement.validationMessage = validData[1];   \n        }\n        newElement.touched = element.blur;\n        newFormdata[element.id] = newElement;\n        \n        this.setState({\n            formdata:newFormdata\n        })\n    }\n\n    validate = (element) => {\n        let error = [true,''];\n\n        if(element.validation.required){\n            const valid = element.value.trim() !=='';\n            const message = `${!valid ? 'This field is required':''}`;\n            error = !valid ? [valid,message] : error\n        }\n\n        return error;\n    }\n\n    submitForm = (event) => {\n        event.preventDefault();\n\n        let dataToSubmit = {};\n        let formIsValid = true;\n\n        for(let key in this.state.formdata){\n            dataToSubmit[key] = this.state.formdata[key].value\n        }\n        for(let key in this.state.formdata){\n            formIsValid = this.state.formdata[key].valid && formIsValid;\n        }\n\n        console.log(dataToSubmit)\n\n        if(formIsValid){\n            this.setState({\n                loading:true,\n                postError:''\n            })\n\n            firebaseArticles.orderByChild(\"id\")\n            .limitToLast(1).once('value')\n            .then( snapshot => {\n                let articleId = null;\n                snapshot.forEach(childSnapshot=>{\n                    articleId = childSnapshot.val().id;\n                });\n\n                dataToSubmit['date'] = firebase.database.ServerValue.TIMESTAMP\n                dataToSubmit['id'] = articleId + 1;\n                dataToSubmit['team'] = parseInt(dataToSubmit['team'],10);\n\n               firebaseArticles.push(dataToSubmit)\n               .then( article => {\n                    this.props.history.push(`/articles/${article.key}`)\n               }).catch( e =>{\n                   this.setState({\n                       postError: e.message\n                   })\n               })\n            })\n\n\n        } else {\n            this.setState({\n                postError: 'Something went wrong'\n            })\n        }\n    }\n\n    submitButton = () => (\n        this.state.loading ? \n            'loading...'\n        :\n        <div>\n            <button type=\"submit\"> Add Post </button>\n        </div>\n    )\n\n    showError = () => (\n        this.state.postError !== '' ? \n            <div className={styles.error}>{this.state.postError}</div>\n        : ''\n    )\n\n    onEditorStateChange = (editorState) => {\n\n        let contentState = editorState.getCurrentContent();\n        let rawState = convertToRaw(contentState)\n\n        let html = stateToHTML(contentState)\n\n        this.updateForm({id:'body'},html)\n\n        this.setState({\n            editorState\n        })\n    }\n\n    storeFilename = (filename) => {\n        this.updateForm({id:'image'},filename)\n    }\n\n\n    render(){\n        return(\n            <div className={styles.postContainer}>\n                <form onSubmit={this.submitForm}>\n                    <h2>Add Post</h2>\n\n                    <Uploader\n                        filename={ (filename)=> this.storeFilename(filename) }\n                    />\n\n                    <FormField\n                        id={'author'}\n                        formdata={this.state.formdata.author}\n                        change={(element)=>this.updateForm(element)}\n                    />\n\n                    <FormField\n                        id={'title'}\n                        formdata={this.state.formdata.title}\n                        change={(element)=>this.updateForm(element)}\n                    />\n\n                    <Editor\n                        editorState={this.state.editorState}\n                        wrapperClassName=\"myEditor-wrapper\"\n                        editorClassName=\"myEditor-editor\"\n                        onEditorStateChange={this.onEditorStateChange}\n                    />\n\n                    <FormField\n                        id={'team'}\n                        formdata={this.state.formdata.team}\n                        change={(element)=>this.updateForm(element)}\n                    />\n\n\n                    { this.submitButton() }\n                    { this.showError() }\n                </form>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}