{"ast":null,"code":"var _jsxFileName = \"/Users/heesoopark/Desktop/myprj/src/components/Posts/posts.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { firebase } from '../../firebase';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.getAuthor = () => {\n      let template = null;\n      template = this.state.posts.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, item.author));\n      return template;\n    };\n\n    this.getTitle = () => {\n      let template = null;\n      template = this.state.posts.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, item.title));\n      return template;\n    };\n\n    this.getPosts = () => {\n      let template = null;\n      template = this.state.posts.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, item.body.slice(3, -4)));\n      return template;\n    };\n  }\n\n  componentWillMount() {\n    firebase.firestore().collection('posts').get().then(querySnapshot => {\n      querySnapshot.forEach(documentSnapshot => {\n        this.setState(prevState => ({\n          posts: [...prevState.posts, documentSnapshot.data()]\n        }));\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, this.getAuthor(), this.getTitle(), this.getPosts());\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/heesoopark/Desktop/myprj/src/components/Posts/posts.js"],"names":["React","useState","useEffect","Component","firebase","ReactHtmlParser","Posts","state","posts","getAuthor","template","map","item","i","author","getTitle","title","getPosts","body","slice","componentWillMount","firestore","collection","get","then","querySnapshot","forEach","documentSnapshot","setState","prevState","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAEnB;AACHC,MAAAA,KAAK,EAAG;AADL,KAFmB;;AAAA,SAkB1BC,SAlB0B,GAkBd,MAAM;AACd,UAAIC,QAAQ,GAAG,IAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAsB,CAACC,IAAD,EAAOC,CAAP,kBAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACE,MADV,CADO,CAAX;AAKA,aAAOJ,QAAP;AACH,KA1ByB;;AAAA,SA4B1BK,QA5B0B,GA4Bf,MAAM;AACb,UAAIL,QAAQ,GAAG,IAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAsB,CAACC,IAAD,EAAOC,CAAP,kBAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACI,KADV,CADO,CAAX;AAKA,aAAON,QAAP;AACH,KApCyB;;AAAA,SAsC1BO,QAtC0B,GAsCf,MAAM;AACb,UAAIP,QAAQ,GAAG,IAAf;AACAA,MAAAA,QAAQ,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,GAAjB,CAAsB,CAACC,IAAD,EAAOC,CAAP,kBAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAkB,CAAC,CAAnB,CADL,CADO,CAAX;AAKA,aAAOT,QAAP;AACH,KA9CyB;AAAA;;AAM1BU,EAAAA,kBAAkB,GAAE;AAChBhB,IAAAA,QAAQ,CAACiB,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EACCC,GADD,GAECC,IAFD,CAEMC,aAAa,IAAI;AACnBA,MAAAA,aAAa,CAACC,OAAd,CAAsBC,gBAAgB,IAAI;AACtC,aAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBrB,UAAAA,KAAK,EAAE,CAAC,GAAGqB,SAAS,CAACrB,KAAd,EAAqBmB,gBAAgB,CAACG,IAAjB,EAArB;AADiB,SAAL,CAAvB;AAGH,OAJD;AAKH,KARD;AASH;;AAkCDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtB,SAAL,EADL,EAEK,KAAKM,QAAL,EAFL,EAGK,KAAKE,QAAL,EAHL,CADJ;AAOH;;AA1DyB;;AA4D9B,eAAeX,KAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport { firebase } from '../../firebase';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass Posts extends Component {\n\n    state ={\n        posts : []\n    }\n\n    componentWillMount(){\n        firebase.firestore().collection('posts')\n        .get()\n        .then(querySnapshot => {\n            querySnapshot.forEach(documentSnapshot => {\n                this.setState(prevState => ({\n                    posts: [...prevState.posts, documentSnapshot.data()]\n                }))\n            })\n        })\n    }\n\n    getAuthor = () => {\n        let template = null;\n        template = this.state.posts.map( (item, i) => (\n            <div>\n                {item.author}\n            </div>\n        ))\n        return template; \n    }\n\n    getTitle = () => {\n        let template = null;\n        template = this.state.posts.map( (item, i) => (\n            <div>\n                {item.title}\n            </div>\n        ))\n        return template; \n    }\n\n    getPosts = () => {\n        let template = null;\n        template = this.state.posts.map( (item, i) => (\n            <div>\n                {item.body.slice(3,-4)}\n            </div>\n        ))\n        return template;\n    }\n\n    \n\n    render() {\n        return(\n            <div>\n                {this.getAuthor()}\n                {this.getTitle()}\n                {this.getPosts()}\n            </div>\n        )\n    }\n}\nexport default Posts;"]},"metadata":{},"sourceType":"module"}